{
    "componentChunkName": "component---node-modules-gatsby-theme-kb-src-templates-topic-js",
    "path": "/bubbles/git/git-stage",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"git stage \\u547D\\u4EE4\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u8FD9\\u6761\\u7B14\\u8BB0\\u521B\\u5EFA\\u4E8E: 2022 \\u5E74 10 \\u6708 27 \\u65E5\\uFF0C\\u661F\\u671F\\u56DB\\uFF0C22: 50\\u3002\")), mdx(\"p\", null, \"\\u6DFB\\u52A0\\u6587\\u4EF6\\u5230\\u6682\\u5B58\\u533A\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"git \\u7684 add\\uFF0C\\u662F\\u4E00\\u4E2A\\u5BB9\\u6613\\u5F15\\u8D77\\u7591\\u95EE\\u7684\\u547D\\u4EE4\\u3002\\u540C\\u65F6\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git diff --cached\"), \" \\u662F\\u6BD4\\u8F83 stage \\u7684\\u6587\\u4EF6\\u7684\\u5DEE\\u5F02\\u7684\\uFF0C\\u4E5F\\u662F\\u4E00\\u4E2A\\u4E0D\\u76F4\\u89C2\\u7684\\u547D\\u4EE4\\u3002\")), mdx(\"p\", null, \"github 2008 \\u5E74\\u7684 blog \\u4E2D\\uFF0C\\u4E5F\\u63D0\\u5230\\uFF0C\\u5BB9\\u6613\\u5F15\\u8D77\\u6DF7\\u6DC6\\uFF1A\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"things like making use of the term \\u2018stage\\u2019 for things that happen in the index (such as using \\u2018git diff \\u2014staged\\u2019 instead of \\u2018git diff \\u2014cached\\u2019) is being worked on. I\\u2019m excited that staging files may soon be done via \\u2018git stage\\u2019 rather-than/in-addition-to \\u2018git add\\u2019. This is nice for new users who often have a hard time seeing why you have to keep \\u2018git add\\u2019ing to stage your changes.\")), mdx(\"p\", null, \"\\u4E8B\\u5B9E\\u4E0A\\uFF0C\\u5728 git \\u7684\\u540E\\u7EED\\u7248\\u672C\\u4E2D\\uFF0C\\u5C31\\u505A\\u4E86\\u4E24\\u4E2A\\u4FEE\\u6539\\uFF1A\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git stage\"), \" \\u4F5C\\u4E3A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git add\"), \" \\u7684\\u4E00\\u4E2A\\u540C\\u4E49\\u8BCD\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git diff --staged\"), \" \\u4F5C\\u4E3A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git diff --cached\"), \" \\u7684\\u76F8\\u540C\\u547D\\u4EE4\"), mdx(\"p\", null, \"\\u4E3A\\u4E86\\u5BB9\\u6613\\u7406\\u89E3\\uFF0C\\u63A8\\u8350\\u5927\\u5BB6\\u4F7F\\u7528 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git stage\"), \" \\u548C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git diff --staged\"), \" \\u8FD9\\u4E24\\u4E2A\\u547D\\u4EE4\\uFF0C\\u800C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git add\"), \" \\u548C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git diff --cached\"), \" \\u8FD9\\u4E24\\u4E2A\\u547D\\u4EE4\\uFF0C\\u4EC5\\u4EC5\\u4E3A\\u4E86\\u4FDD\\u6301\\u548C\\u4EE5\\u524D\\u7684\\u517C\\u5BB9\\u505A\\u4FDD\\u7559\\u3002\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#git-stage-命令","title":"git stage 命令"}]},"outboundReferences":[],"inboundReferences":[{"contextLine":"| git stage                                               | `git add` 的一个同义词                                                                                                                                          | [[git-stage]]       |","referrer":{"parent":{"id":"15091908-b19f-53eb-8de9-08d6c2632ddd","fields":{"slug":"/bubbles/git/git-cheatsheet","title":"Git 常用命令备忘录"}}}},{"contextLine":"[[git-stage]]","referrer":{"parent":{"id":"94303ee3-1c58-5f7d-b8b1-2d6cc0a48716","fields":{"slug":"/notes/git","title":"怕遗忘 Git 的我，把相关知识点都记录下来就对了"}}}}]},"fields":{"slug":"/bubbles/git/git-stage","title":"git stage 命令"}}},"pageContext":{"id":"a2dda06b-9d85-5798-976a-e55de2708066","refWordMdxSlugDict":{},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}